05.02.2024 12:19
Кароче по гайду добавил класс Worker со своей блокирующей функцией(сканирование), который отправляется в другой поток,
чтоб не лочить основной. Сообщение между потоками сделано на КАСТОМНЫХ сигналах и слотах
+ try except на запрос к серверу и логирование в log.txt, если не отвечает или какая-то ошибка с последующим выходом


05.02.2024 22:03
Часа два пытался понять эти потоки, xd.
Описал функцию на проверку отпечатка, пока что работает с вводом строки в терминал. Алгоритм такой:
нажал кнопку - отправил строку в терминал - тебе выдало ответ по сравнению. Сравниваю со строкой '123'.
После неудачного скана сделал так, что нужно снова нажать кнопку - кароче для каждой попытки сравнения надо нажать кнопку.

Я там дописал коннект для изменения значения label, саму функцию изменения start_scan ну и законнектил это всё по потокам,
хз правильно или нет, тебе надо будет чекнуть.


06.02.2024 13:04
работа с апишкой теперь в api_requests.py, удалил main.py - лишнее, добавил utils.py это для всякого повторяющегося кода
например логирование. Добавил логирование для ошибок на старте(окно с оповещением, что ошибка и exit()) и логирование
для ошибок в функциях отпечатков без окна оповещения, просто exit(). Почистил код от принтов, импортов, небольшой
рефакторинг для красоты. Функция-обработчик по нажатию кнопки на проверить отпечаток из lambda в обычную def